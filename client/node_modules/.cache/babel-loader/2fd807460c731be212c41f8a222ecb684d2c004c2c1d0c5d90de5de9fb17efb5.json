{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nconst keys = require('../../keys');\nfunction useCheck_auth() {\n  _s();\n  const [authenticated, setAuthenticated] = useState(false);\n  useEffect(() => {\n    fetch(`${keys.url_encrypt.key}/auth/return_auth`).then(response => response.json()).then(data => data.authenticated === true ? setAuthenticated(true) : null).catch(err => console.log(err));\n  }, []);\n  return authenticated;\n}\n_s(useCheck_auth, \"+nyo0O1WmcKNkwQZH3xRKUoDvQ8=\");\nexport default useCheck_auth;","map":{"version":3,"names":["useState","useEffect","keys","require","useCheck_auth","_s","authenticated","setAuthenticated","fetch","url_encrypt","key","then","response","json","data","catch","err","console","log"],"sources":["/Users/danielyun/Desktop/s/client/src/components/auth/useCheck_auth.js"],"sourcesContent":["import {useState, useEffect} from 'react';\nconst keys = require('../../keys');\n\nfunction useCheck_auth() {\n\n    const [authenticated, setAuthenticated] = useState(false);\n\n    useEffect(() => {\n        fetch(`${keys.url_encrypt.key}/auth/return_auth`)\n        .then(response => response.json())\n        .then(data => data.authenticated === true ? setAuthenticated(true) : null)\n        .catch(err => console.log(err));\n    }, [])\n\n    return authenticated;\n}\n\nexport default useCheck_auth;"],"mappings":";AAAA,SAAQA,QAAQ,EAAEC,SAAS,QAAO,OAAO;AACzC,MAAMC,IAAI,GAAGC,OAAO,CAAC,YAAY,CAAC;AAElC,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EAErB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAEzDC,SAAS,CAAC,MAAM;IACZO,KAAK,CAAE,GAAEN,IAAI,CAACO,WAAW,CAACC,GAAI,mBAAkB,CAAC,CAChDC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIA,IAAI,CAACR,aAAa,KAAK,IAAI,GAAGC,gBAAgB,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,CACzEQ,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;EACnC,CAAC,EAAE,EAAE,CAAC;EAEN,OAAOV,aAAa;AACxB;AAACD,EAAA,CAZQD,aAAa;AActB,eAAeA,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}